name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    env:
      USING_COVERAGE: '3.9, 3.10'


    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]

    steps:
      # - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      
      - uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0

      - name: Install poetry
        run: |
          python -m pip install poetry==1.1.11

      - name: Configure poetry
        run: |
          python -m poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m poetry install
      # And finally run tests. I'm using pytest and all my pytest config is in my `pyproject.toml`
      # so this line is super-simple. But it could be as complex as you need.
      # - run: poetry run pytest


      # - name: "Install dependencies"
      #   run: |
      #     python -VV
      #     python -m site
      #     python -m pip install --upgrade pip setuptools wheel poetry
      #     python -m pip install --upgrade coverage[toml] virtualenv tox tox-gh-actions

      # - name: "Run tox targets for ${{ matrix.python-version }}"
        # run: "python -m tox"
